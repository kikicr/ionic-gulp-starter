// Ionic Starter App

// angular.module is a global place for creating, registering and retrieving Angular modules
// 'starter' is the name of this angular module example (also set in a <body> attribute in index.html)
// the 2nd parameter is an array of 'requires'
angular.module('jakartaOne', ['ionic','controllers','services','directives','lib'])

.run(['$ionicPlatform','$rootScope',function($ionicPlatform,$rootScope) {
 //set global variable used to set token
       $rootScope.session = {
         "token":null,
         "userdata":null
       };
  $ionicPlatform.ready(function() {
    if(window.cordova && window.cordova.plugins.Keyboard) {
      // Hide the accessory bar by default (remove this to show the accessory bar above the keyboard
      // for form inputs)
      cordova.plugins.Keyboard.hideKeyboardAccessoryBar(false);

      // Don't remove this line unless you know what you are doing. It stops the viewport
      // from snapping when text inputs are focused. Ionic handles this internally for
      // a much nicer keyboard experience.
      cordova.plugins.Keyboard.disableScroll(true);
      
      
      
      //haddle keyboard jumping on android
     if(ionic.Platform.isAndroid()) { //iOS works fine
        window.addEventListener("native.showkeyboard", function(){ //hide stuff on keyboard open
          if(document.getElementsByTagName("body")[0].className.indexOf("keyboard-body") === -1) {
                  document.getElementsByTagName("body")[0].className += " keyboard-body";
                }
        });
        window.addEventListener("native.hidekeyboard", function(){ //show stuff on keyboard hide
          document.getElementsByTagName("body")[0].className = document.getElementsByTagName("body")[0].className.replace("keyboard-body", "");
            });
	  }
	  
	 
    }
    if(window.StatusBar) {
      StatusBar.styleDefault();
    }
  });
}])

//state 
//this statement used to manage application routing , controller , and view
.config(['$stateProvider','$urlRouterProvider','$ionicConfigProvider',
          function($stateProvider,$urlRouterProvider,$ionicConfigProvider){
                 $ionicConfigProvider.views.maxCache(0);
                 
                 $stateProvider.state('jakone',{
                     abstract:true,
                     templateUrl:'build/template/base-template/menu.html',
                     controller:'jakoneBaseController',
                     url:'/jakone'  
                 })
                 //===========login page===========//
                .state('jakone.login',{
                    url:'^/login',
                    views: {
                          'menuContent': {
                              templateUrl: 'build/template/login/login.html',
                              controller:'loginController'
                          },
                          'fabContent': {
                              template: ''
                          }
                    }
                 })
                 //==========registration page ======//
                 .state('jakone.registration',{
                    url:'^/registration',
                    views: {
                          'menuContent': {
                              templateUrl: 'build/template/registration/registration.html',
                              controller:'registrationController'
                          },
                          'fabContent': {
                              template: ''
                          }
                    }
                 })
                 //========Registration Activation =====//
                 .state('jakone.registrationConfirm',{
                    url:'^/registration-confirm',
                    views: {
                          'menuContent': {
                              templateUrl: 'build/template/registration/registration-confirmation.html',
                              controller:'registrationConfirmController'
                          },
                          'fabContent': {
                              template: ''
                          }
                    }
                    ,params:{username:null}
                 })
                 //========= dasboard page ==========//
                    .state('jakone.dasboard',{
                    url:'^/dasboard',
                    views: {
                          'menuContent': {
                              templateUrl: 'build/template/main/dasboard-menu.html',
                              controller:'dasboardController'
                          },
                          'fabContent': {
                              template: ''
                          }
                    }
                   })
                 //========= purchase page ==========//
                    .state('jakone.purchase',{
                    url:'^/purchase',
                    views: {
                          'menuContent': {
                              templateUrl: 'build/template/main/purchase.html',
                              controller:'purchaseController'
                          },
                          'fabContent': {
                              template: ''
                          }
                    }
                   })
                 //========= purchase confim page ==========//
                    .state('jakone.purchaseConfirm',{
                    url:'^/purchase-confirm',
                    views: {
                          'menuContent': {
                              templateUrl: 'build/template/main/purchase-confimation.html',
                              controller:'purchaseConfirmationController'
                          },
                          'fabContent': {
                              template: ''
                          }
                    }
                   })
                  //========= purchase page ==========//
                    .state('jakone.topup',{
                    url:'^/topup',
                    views: {
                          'menuContent': {
                              templateUrl: 'build/template/main/topup.html',
                              controller:'topupController'
                          },
                          'fabContent': {
                              template: ''
                          }
                    }
                   })
                 //========= purchase confim page ==========//
                    .state('jakone.topupConfirm',{
                    url:'^/topup-confirm',
                    views: {
                          'menuContent': {
                              templateUrl: 'build/template/main/topup-confimation.html',
                              controller:'topupConfirmationController'
                          },
                          'fabContent': {
                              template: ''
                          }
                    }
                   })
                   //========= purchase page ==========//
                    .state('jakone.changePin',{
                    url:'^/change-pin',
                    views: {
                          'menuContent': {
                              templateUrl: 'build/template/setting/change-pin.html',
                              controller:'changePinController'
                          },
                          'fabContent': {
                              template: ''
                          }
                    }
                   })
                 //========= purchase confim page ==========//
                    .state('jakone.changePassword',{
                    url:'^/change-password',
                    views: {
                          'menuContent': {
                              templateUrl: 'build/template/setting/change-password.html',
                              controller:'changePasswordController'
                          },
                          'fabContent': {
                              template: ''
                          }
                    }
                   })
                   
                 $urlRouterProvider.otherwise('/login');
          }
      ]);
//======================PACKAGE ==========================================//
var package = function(name){
    
       return application.name+"."+name;
}

var registerPackage = function(packageName){
    angular.module(application.name+"."+packageName,[]);
    return application.name+"."+packageName;
}


var backwardState = function(obj) {
    if(obj.hasOwnProperties("params")){
        return angular.extend(obj,{
            "fromBack":false
        });
    }
    obj['params'] = {
        "fromBack":false
    } 
    return obj;
};

//=======================CONTROLLERS =====================================//
angular.module('controllers',[
    //main controller
    registerPackage('controller.main'),
    registerPackage('controller.basetemplate')
]);

//======================SERVICES ========================================//
angular.module('services',[
    registerPackage('service.network'),
    registerPackage('service.adapter'),
    registerPackage('service.ui-component'),
    registerPackage('service.hardware')
]);

//===================== DIRECTIVES =====================================//
angular.module('directives',[
    registerPackage('directive.component')
]);

//==================== LIBRARY ==========================================//
angular.module('lib',[
    'ionic-material'
    , 'ionMdInput'
    ,'ngCordova'
]);
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("controller.basetemplate");

angular.module(packageName)
.controller('jakoneBaseController',['$scope','$state','$rootScope',function($scope,$state,$rootScope){
  
  
    // Form data for the login modal
    $scope.loginData = {};
    $scope.isExpanded = false;
    $scope.hasHeaderFabLeft = false;
    $scope.hasHeaderFabRight = false;
    $scope.session = $rootScope.session;
    var navIcons = document.getElementsByClassName('ion-navicon');
    for (var i = 0; i < navIcons.length; i++) {
        navIcons.addEventListener('click', function() {
            this.classList.toggle('active');
        });
    }

    ////////////////////////////////////////
    // Layout Methods
    ////////////////////////////////////////

    $scope.hideNavBar = function() {
        document.getElementsByTagName('ion-nav-bar')[0].style.display = 'none';
    };

    $scope.showNavBar = function() {
        document.getElementsByTagName('ion-nav-bar')[0].style.display = 'block';
    };

    $scope.noHeader = function() {
        var content = document.getElementsByTagName('ion-content');
        for (var i = 0; i < content.length; i++) {
            if (content[i].classList.contains('has-header')) {
                content[i].classList.toggle('has-header');
            }
        }
    };

    $scope.setExpanded = function(bool) {
        $scope.isExpanded = bool;
    };

    $scope.setHeaderFab = function(location) {
        var hasHeaderFabLeft = false;
        var hasHeaderFabRight = false;

        switch (location) {
            case 'left':
                hasHeaderFabLeft = true;
                break;
            case 'right':
                hasHeaderFabRight = true;
                break;
        }

        $scope.hasHeaderFabLeft = hasHeaderFabLeft;
        $scope.hasHeaderFabRight = hasHeaderFabRight;
    };

    $scope.hasHeader = function() {
        var content = document.getElementsByTagName('ion-content');
        for (var i = 0; i < content.length; i++) {
            if (!content[i].classList.contains('has-header')) {
                content[i].classList.toggle('has-header');
            }
        }

    };

    $scope.hideHeader = function() {
        $scope.hideNavBar();
        $scope.noHeader();
    };

    $scope.showHeader = function() {
        $scope.showNavBar();
        $scope.hasHeader();
    };

    $scope.clearFabs = function() {
        var fabs = document.getElementsByClassName('button-fab');
        if (fabs.length && fabs.length > 1) {
            fabs[0].remove();
        }
    };
    
    
    
}]);
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("controller.main");

angular.module(packageName)
.controller('loginController',['$scope','$state','ionicMaterialInk','authAdapter','$timeout',function($scope,$state,ionicMaterialInk,authAdapter,$timeout){
        $scope.auth ={"username":"","password":""};
        //TODO : add page function
    //[ON init]
    $scope.init = function(){
        $scope.$parent.clearFabs();
        $timeout(function() {
            $scope.$parent.hideHeader();
        }, 0);
        ionicMaterialInk.displayEffect();
    }
    
    $scope.login = function(auth){
        authAdapter.login(auth).then(function(response){          
            $state.go('jakone.dasboard');
        });
    }
    
}]);    
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("controller.main");

angular.module(packageName)
.controller('dasboardController',['$scope','$state','ionicMaterialMotion','ionicMaterialInk','$timeout',function($scope,$state,ionicMaterialMotion,ionicMaterialInk,$timeout){
        //TODO : add page function
    //[ON init]
    $scope.init = function(){
        $scope.$parent.showHeader();
        $scope.$parent.clearFabs();
        $scope.isExpanded = false;
        $scope.$parent.setExpanded(false);
        $scope.$parent.setHeaderFab(false);
        
        // Set Motion
        $timeout(function() {
            ionicMaterialMotion.slideUp({
                selector: '.slide-up'
            });
        }, 300);

        $timeout(function() {
            ionicMaterialMotion.fadeSlideInRight({
                startVelocity: 3000
            });
        }, 700);
    }
    
    
    
}]);
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("controller.main");

angular.module(packageName)
.controller('purchaseController',['$scope','$state','transactionAdapter'
                                ,'ionicMaterialMotion','ionicMaterialInk'
                                ,'$timeout',function($scope,$state,transactionAdapter
                                                    ,ionicMaterialMotion
                                                    ,ionicMaterialInk,$timeout){
        //TODO : add page function
    //[ON init]
    $scope.init = function(){
       $scope.$parent.showHeader();
         $scope.isExpanded = true;
        $scope.$parent.setExpanded(true);
        // Set Motion
        $timeout(function() {
        
        $scope.$parent.clearFabs();
      
        $scope.$parent.setHeaderFab(false);
         ionicMaterialInk.displayEffect();
            ionicMaterialMotion.slideUp({
                selector: '.slide-up'
            });
        }, 300);

        $timeout(function() {
            ionicMaterialMotion.fadeSlideInRight({
                startVelocity: 3000
            });
        }, 700);
    }
    
    
    
}])
.controller('purchaseConfirmationController',['$scope','$state','transactionAdapter'
                                ,'ionicMaterialMotion','ionicMaterialInk'
                                ,'$timeout',function($scope,$state
                                                    ,ionicMaterialMotion,transactionAdapter
                                                    ,ionicMaterialInk,$timeout){
        //TODO : add page function
    //[ON init]
    $scope.init = function(){
        $scope.$parent.showHeader();
        $scope.$parent.clearFabs();
        $scope.isExpanded = false;
        $scope.$parent.setExpanded(false);
        $scope.$parent.setHeaderFab(false);
        
        // Set Motion
        $timeout(function() {
            ionicMaterialMotion.slideUp({
                selector: '.slide-up'
            });
        }, 300);

        $timeout(function() {
            ionicMaterialMotion.fadeSlideInRight({
                startVelocity: 3000
            });
        },700);
    }
    
    
    
}])
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("controller.main");

angular.module(packageName)
.controller('topupController',['$scope','$state','transactionAdapter'
                                 ,'ionicMaterialMotion','ionicMaterialInk'
                                 ,'$timeout',function($scope,$state,transactionAdapter
                                            ,ionicMaterialMotion,ionicMaterialInk,$timeout){
        //TODO : add page function
    //[ON init]
    $scope.init = function(){
        $scope.$parent.showHeader();
         $scope.isExpanded = true;
        $scope.$parent.setExpanded(true);
        // Set Motion
        $timeout(function() {
        
        $scope.$parent.clearFabs();
      
        $scope.$parent.setHeaderFab(false);
         ionicMaterialInk.displayEffect();
            ionicMaterialMotion.slideUp({
                selector: '.slide-up'
            });
        }, 300);

        $timeout(function() {
            ionicMaterialMotion.fadeSlideInRight({
                startVelocity: 3000
            });
        }, 700);
    }
    
    
    
}])
.controller('topupController',['$scope','$state','transactionAdapter'
                                 ,'ionicMaterialMotion','ionicMaterialInk'
                                 ,'$timeout',function($scope,$state,transactionAdapter
                                            ,ionicMaterialMotion,ionicMaterialInk,$timeout){
        //TODO : add page function
    //[ON init]
    $scope.init = function(){
        $scope.$parent.showHeader();
        $scope.$parent.clearFabs();
        $scope.isExpanded = false;
        $scope.$parent.setExpanded(false);
        $scope.$parent.setHeaderFab(false);
        
        // Set Motion
        $timeout(function() {
            ionicMaterialMotion.slideUp({
                selector: '.slide-up'
            });
        }, 300);

        $timeout(function() {
            ionicMaterialMotion.fadeSlideInRight({
                startVelocity: 3000
            });
        }, 700);
    }
    
    
    
}]);
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("controller.main");

angular.module(packageName)
.controller('registrationController',['$scope','$rootScope','$state','$cordovaDevice','ionicMaterialInk','$timeout','popupService','authAdapter',
function($scope,$rootScope,$state,$cordovaDevice,ionicMaterialInk,$timeout,popupService,authAdapter){
        //TODO : add page function
    //[ON init]
    var username = null;
    $scope.init = function(){
        
        $scope.$parent.clearFabs();
        $timeout(function() {
            $scope.$parent.hideHeader();
        }, 0);
        ionicMaterialInk.displayEffect();
    }
    
    //[ON register clicked]
    $scope.doRegister = function(form,model){
        var request = {};
        request.register = model;
        // request.register.deviceId = $cordovaDevice.getUUID();
        request.register.deviceId ="1234555"; 
        if(!form.$valid){
            //TODO:validation here
            popupService.alert("notification","your input doesn't valid","ok");
            return ;
        }
        username = model.username;
        console.log(authAdapter);
        authAdapter.register(request).then(onSuccessListener,onFailureListener);
    }
    //listener here
    function onSuccessListener(response){
        //ON success invoke
        popupService.alert("notification","your registration code is <strong>"+response.registration.registrationCode+"</strong>","ok");
        $state.go('jakone.registrationConfirm',{"username":username});
    }
    
    function onFailureListener(response){
        //ON fail invoke
    }
    
    
    
}])


//confirmation
.controller('registrationConfirmController',['$scope','$rootScope','$state','$stateParams','$cordovaDevice','ionicMaterialInk','$timeout','popupService','authAdapter',
function($scope,$rootScope,$state,$stateParams,$cordovaDevice,ionicMaterialInk,$timeout,popupService,authAdapter){
        //TODO : add page function
    //[ON init]
    var username = null;
    $scope.init = function(){
        username = $stateParams.username;
        $scope.$parent.clearFabs();
        $timeout(function() {
            $scope.$parent.hideHeader();
        }, 0);
        ionicMaterialInk.displayEffect();
    }
    
    //[ON register clicked]
    $scope.register = function(form,model){
        var request = {};
        request.username = username;
        request.registrationCode = model.registrationCode; 
        if(!form.$valid){
            //TODO:validation here
            popupService.alert("notification","your input doesn't valid","ok");
            return ;
        }
        authAdapter.activationRegistration(request).then(onSuccessListener,onFailureListener);
    }
    //listener here
    function onSuccessListener(response){
        //ON success invoke
        popupService.alert("notification","thanks for your registration","ok");
        $state.go('jakone.login');
    }
    
    function onFailureListener(response){
        //ON fail invoke
    }
    
    
    
}])
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("controller.main");

angular.module(packageName)
.controller('changePasswordController',['$scope','$state','nonFinTransactionAdapter'
                                 ,'ionicMaterialMotion','ionicMaterialInk'
                                 ,'$timeout',function($scope,$state,nonFinTransactionAdapter
                                            ,ionicMaterialMotion,ionicMaterialInk,$timeout){
        //TODO : add page function
    //[ON init]
    $scope.init = function(){
        $scope.$parent.showHeader();
        $scope.$parent.clearFabs();
        $scope.isExpanded = false;
        $scope.$parent.setExpanded(false);
        $scope.$parent.setHeaderFab(false);
        
        // Set Motion
        $timeout(function() {
            ionicMaterialMotion.slideUp({
                selector: '.slide-up'
            });
        }, 300);

        $timeout(function() {
            ionicMaterialMotion.fadeSlideInRight({
                startVelocity: 3000
            });
        }, 700);
    }
    
    
    
}]);
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("controller.main");

angular.module(packageName)
.controller('changePinController',['$scope','$state','nonFinTransactionAdapter'
                                 ,'ionicMaterialMotion','ionicMaterialInk'
                                 ,'$timeout',function($scope,$state,nonFinTransactionAdapter
                                            ,ionicMaterialMotion,ionicMaterialInk,$timeout){
        //TODO : add page function
    //[ON init]
    $scope.init = function(){
        $scope.$parent.showHeader();
        $scope.$parent.clearFabs();
        $scope.isExpanded = false;
        $scope.$parent.setExpanded(false);
        $scope.$parent.setHeaderFab(false);
        
        // Set Motion
        $timeout(function() {
            ionicMaterialMotion.slideUp({
                selector: '.slide-up'
            });
        }, 300);

        $timeout(function() {
            ionicMaterialMotion.fadeSlideInRight({
                startVelocity: 3000
            });
        }, 700);
    }
    
    
    
}]);
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("controller.main");

angular.module(packageName)
.controller('settingController',['$scope','$state'
                                 ,'ionicMaterialMotion','ionicMaterialInk'
                                 ,'$timeout',function($scope,$state
                                            ,ionicMaterialMotion,ionicMaterialInk,$timeout){
        //TODO : add page function
    //[ON init]
    $scope.init = function(){
        $scope.$parent.showHeader();
        $scope.$parent.clearFabs();
        $scope.isExpanded = false;
        $scope.$parent.setExpanded(false);
        $scope.$parent.setHeaderFab(false);
        
        // Set Motion
        $timeout(function() {
            ionicMaterialMotion.slideUp({
                selector: '.slide-up'
            });
        }, 300);

        $timeout(function() {
            ionicMaterialMotion.fadeSlideInRight({
                startVelocity: 3000
            });
        }, 700);
    }
    
    
    
}]);
 /**
 * @author akbar.pambudi
 * @since 0.0.1
 */
     
        
        
var packageName = package("directive.component");

angular.module(packageName)
.directive('dasboardTabs',[function(){
    return {
        "template":'<div class="tabs tabs-dark tabs-icon-top static">'
                    +'<a ui-sref="jakone.dasboard" class="tab-item">'
                    +'<i class="icon ion-arrow-graph-up-right"></i>history</a>'
                    +'<a ui-sref="jakone.topup" class="tab-item"><i class="icon ion-card"></i> top up</a>'
                    +'<a ui-sref="jakone.purchase" class="tab-item"><i class="icon ion-ios-cart"></i> purchase</a>'
                    +'</div>'
    }
}]);    
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("service.adapter");

angular.module(packageName)
.factory('authAdapter',['adapterInvoker','popupService','$rootScope','$q',function(adapterInvoker,popupService, $rootScope,$q) {
    var _public = {};
    var _private = {};
    //login 
    _public.login = function(params) {
        var defer = $q.defer();
        
        adapterInvoker.invoke(application.adapter.baseUrl(),'login',params,true)
        .then(function(response) {
            //ON SUCCESS
            $rootScope.session.userdata = response.body.coreUser;
            defer.resolve(response);
        },function(response){
            //ON FAILS
            _private.showError(response);
            defer.reject(response);
            
        });
        
        return defer.promise;  
    };
    
    //register
    _public.register = function(params){
        var defer = $q.defer();
        adapterInvoker.invoke(application.adapter.jakOneUrl(),"registerCustomerUser",params)
        .then(function(response){
            //ON SUCCESS
            //mapping response
            var res = {
                "registration":{
                        "tid":response.body.RegisterCustomerResponse.tid._text,
                        "registrationCode":response.body.RegisterCustomerResponse.registrationCode._text 
                }
            };
            
            //send defer resolve
            defer.resolve(res);
        },function(response){
            //ON FAILURE
            _private.showError(response);
            defer.reject(response);
        });
        return defer.promise;
    }
    
    //confirm registration
    _public.activationRegistration = function(params){
          var defer = $q.defer();
        adapterInvoker.invoke(application.adapter.jakOneUrl(),"activationRegistration",params)
        .then(function(response){
            //ON SUCCESS
            //mapping response
            var res = {
                "activationRegistration":{
                        "result":response.body.ActivationResponse.result._text
                         
                }
            };
            
            //send defer resolve
            defer.resolve(res);
        },function(response){
            //ON FAILURE
            _private.showError(response);
            defer.reject(response);
        });
        return defer.promise;
        
    }
    
    //show error
    _private.showError = function(params){
        popupService.alert("notification",params.message,"ok");
    }
    return _public;
}]);    
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("service.adapter");

angular.module(packageName)
.factory('nonFinTransactionAdapter',['adapterInvoker','popupService','$rootScope','$q',function(adapterInvoker,popupService, $rootScope,$q) {
    var _public = {};
    var _private = {};
 
   _public.changePassword = function(model){
       var defer = $.defer();
        adapterInvoker.invoke(application.adapter.jakoneUrl(),"changePassword",model).
        then(function(){
            
        },function(){
            
        });
        return defer.promise;
   }
   
   //
   _public.changePin = function(model){
       var defer = $.defer();
       adapterInvoker.invoke(application.adapter.jakoneUrl(),"changePin",model).
       then(function(){
           
       },function(){
           
       });
        return defer.promise;
   }
   
    
    //show error
    _private.showError = function(params){
        popupService.alert("notification",params.message,"ok");
    }
    return _public;
}]);    
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("service.adapter");

angular.module(packageName)
.factory('transactionAdapter',['adapterInvoker','popupService','$rootScope','$q',function(adapterInvoker,popupService, $rootScope,$q) {
    var _public = {};
    var _private = {};
   //get transaction history
   _public.getTransactionHistory = function(model){
       var defer = $q.defer();
       adapterInvoker.invoke(application.adapter.jakoneUrl(),"getTransactionHistory",model).
       then(function(){
           
       },function(){
           
       });
       return defer.promise;
   }
   //
   _public.purchase = function(model){
       var defer = $q.defer();
        adapterInvoker.invoke(application.adapter.jakoneUrl(),"purchase",model).
        then(function(){
            
        },function(){
            
        });
        return defer.promise;
   }
   
   //
   _public.topup = function(model){
       var defer = $q.defer();
       adapterInvoker.invoke(application.adapter.jakoneUrl(),"topup",model).
       then(function(){
           
       },function(){
           
       });
       return defer.promise;
   }
   
    
    //show error
    _private.showError = function(params){
        popupService.alert("notification",params.message,"ok");
    }
    return _public;
}]);    
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("service.hardware");

angular.module(packageName)
.factory('nfcService',['$ionicLoading','$q',function($ionicLoading,$q) {
    var _public = {};
    var _private = {};
    
    _public.ndefListener = function() {
        var defer = $q.defer();
        nfc.addNdefListener(function(tagObj){
           //on listen start
            defer.notify(tagObj);
        },function(){
            //on success
            //TODO:notting to do
        },function(error){
            //on error
            //return error defer
            defer.reject(error);
        });
        
        return defer.promise;    
}

_public.addTagDicoveredListener = function(){
        var defer = $q.defer();
        nfc.addTagDiscoveredListener(function(tagObj){
            defer.notify(tagObj);
        },function(){
            
        },function(error){
            defer.reject(error);
        });
        return defer.promise;
    }
   
   return _public;     
    
}]);    
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("service.network");

angular.module(packageName)
.factory('adapterInvoker',['$http','$ionicLoading','$rootScope','$q',function($http,$ionicLoading,$rootScope,$q){
    var _public = {};
    var _private ={};
    /**
     * @param url , url 
     * @param method, url method
     * @param params, parameter invoke
     * @return json
     * 
     * invoke service using http post protocol 
     * then return promise 
     * on success -> return json response
     * on fail ->return json of failure
     */
    _public.invoke = function(url,method,params,secure) {
            var defer = $q.defer();
            $ionicLoading.show();
            var req = {
                    method: 'POST',
                    url: url+"/"+method,
                    headers: {
                    'Content-Type': 'application/json'
                    
                    },
                    data: { 
                            metadata:{}
                            ,body: params 
                        }
                    }
               if(secure){
                   req['headers']['X-AUTH-TOKEN'] =(secure)?$rootScope.session.token||null:"";
               }
            //when invoke         
            var invoke = $http(req);
            invoke.success(function onSuccess(data,status,headers,config){
                 
                  if(data.status.code !=200 ){
                      //get error response
                       $ionicLoading.hide();
                        defer.reject(
                            {
                                code:data.status.code,
                                message:data.status.description,
                                body :data.body||{}
                            }
                        );
                  }else if(data.body.hasOwnProperty("Fault")){
                        $ionicLoading.hide();
                      var msg = data.body.Fault.faultstring._text.split("-");
                      defer.reject(
                            {
                                code:msg[0],
                                message:msg[1],
                                body :data.body||{}
                            }
                        );
                  }
                  else{
                        
                       //get success response
                        var token = headers("x-auth-token");
                        if(secure){
                            $rootScope.session.token = token;
                        }
                         $ionicLoading.hide();
                        defer.resolve(
                            {
                                code:"200",
                                message:"OK",
                                body:data.body||{}
                            }
                        );
                  }
                 
            });
            
            invoke.error(function onFail(){
                 $ionicLoading.hide();
                defer.reject( {
                                code:"0",
                                message:"network connection error",
                                body :{}
                            });
                            
            });     
        
        return defer.promise;   

    }
    /**
     * @param url , url
     * @param method, method
     * @return http url+method
     */
    _private.createUrl = function(url,method){  
        return url+"/"+"method";
    }
    
    
    return _public;
}]);    
/**
 * @author akbar.pambudi
 * @since 0.0.1
 */

var packageName = package("service.ui-component");

angular.module(packageName)
.factory('popupService',['$ionicPopup','$q',function($ionicPopup,$q) {
    var _public = {};
    var _private = {};
    
    _public.alert = function(title,message,buttonTxt) {
         $ionicPopup.alert({
                    "title":title||"notification",
                    "template":"<h4 style='text-align:center'>"+message+"</h4>",
                    "okText":buttonTxt||"ok"
                });
    }
   
   return _public;     
    
}]);    